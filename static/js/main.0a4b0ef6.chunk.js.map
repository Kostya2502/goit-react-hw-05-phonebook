{"version":3,"sources":["components/notification/Notification.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/contactForm/ContactForm.module.css","components/App.module.css","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","components/notification/Notification.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","contactChek","contacts","props","reduce","acc","contact","handleSubmit","preventDefault","onSubmit","this","className","style","form","label","type","placeholder","onChange","input","button","Component","ContactList","onDeleteContact","TransitionGroup","component","map","id","CSSTransition","timeout","classNames","item","onClick","Filter","in","length","unmountOnExit","Notification","notification","App","filter","isNotification","addContact","uuidv4","find","toLowerCase","trim","changeFilter","event","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","prevState","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","styleNotif","onEntered","appear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a4b0ef6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2NHTL\",\"enter\":\"Notification_enter__1rsp6\",\"enterActive\":\"Notification_enterActive__1KMku\",\"exit\":\"Notification_exit__W3h-e\",\"exitActive\":\"Notification_exitActive__uEj1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2L1Xk\",\"button\":\"ContactList_button__1509e\",\"enter\":\"ContactList_enter__TZXt9\",\"enterActive\":\"ContactList_enterActive__30Oaa\",\"exit\":\"ContactList_exit__1o-_e\",\"exitActive\":\"ContactList_exitActive__3ChBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Filter_enter__BFwI8\",\"enterActive\":\"Filter_enterActive__l4BzG\",\"exit\":\"Filter_exit__2gx0s\",\"exitActive\":\"Filter_exitActive__2jDjY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__6xfnf\",\"label\":\"ContactForm_label__7OK1o\",\"input\":\"ContactForm_input__Ammet\",\"button\":\"ContactForm_button__27RTV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"App_appear__1MeWS\",\"appearActive\":\"App_appearActive__1jfN5\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    };\r\n\r\n    contactChek = () => {\r\n        const { name, number } = this.state;\r\n        const { contacts } = this.props;\r\n        const namesIn = contacts.reduce(\r\n            (acc, contact) => [...acc, contact.name],\r\n            [],\r\n        );\r\n        const numbersIn = contacts.reduce(\r\n            (acc, contact) => [...acc, contact.number],\r\n            [],\r\n        );\r\n\r\n        // if (namesIn.includes(name) || numbersIn.includes(number)) {\r\n        //     alert(`${name}${number} is already in contacts`);\r\n        // }\r\n\r\n        // if (name === '' || number === '') {\r\n        //     alert('Enter all data, please');\r\n        // }\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        const { name, number } = this.state;\r\n\r\n        e.preventDefault();\r\n        this.setState({ name: '', number: '' });\r\n        if (this.contactChek()) {\r\n            return;\r\n        }\r\n\r\n        this.props.onSubmit(name, number);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={style.form}>\r\n                <label className={style.label}>\r\n                    Name:\r\n          <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        placeholder=\"enter name\"\r\n                        onChange={this.handleChange}\r\n                        className={style.input}\r\n                    />\r\n                </label>\r\n\r\n                <label className={style.label}>\r\n                    Number:\r\n          <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        placeholder=\"enter number\"\r\n                        onChange={this.handleChange}\r\n                        className={style.input}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" className={style.button}>\r\n                    Add contact\r\n        </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport style from './ContactList.module.css';\r\n// import './ContactList.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <TransitionGroup component='ul' >\r\n            {contacts.map(({ id, name, number }) => (\r\n                // <CSSTransition key={id} timeout={400} classNames={ContactList} >\r\n                < CSSTransition key={id} timeout={400} classNames={style} >\r\n                    <li key={id} className={style.item}>\r\n                        <p >\r\n                            {name}: {number}\r\n                        </p>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => onDeleteContact(id)}\r\n                            className={style.button}\r\n                        >\r\n                            Delete\r\n          </button>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))\r\n            }\r\n        </TransitionGroup >\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    onDeleteContact: PropTypes.func,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        }),\r\n    ),\r\n};","import PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange, contacts }) => {\r\n    return (<>\r\n        <CSSTransition in={contacts.length > 1} classNames={style} timeout={1000} unmountOnExit>\r\n            <label>\r\n                Find contacts by name:\r\n            <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </label>\r\n        </CSSTransition>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n};","import React from 'react';\r\nimport style from './Notification.module.css';\r\n\r\nconst Notification = () => {\r\n    return <div className={style.notification}>Contact already exist!</div>;\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Notification from './notification/Notification';\r\nimport style from './App.module.css';\r\nimport styleNotif from './notification/Notification.module.css';\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        contacts: [\r\n            // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n            // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n            // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n            // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n        ],\r\n        filter: '',\r\n        isNotification: false,\r\n    };\r\n\r\n    addContact = (name, number) => {\r\n        const { contacts } = this.state;\r\n        const contact = {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n        };\r\n\r\n        if (\r\n            contacts.find(\r\n                (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n            )\r\n        ) {\r\n            this.setState((state) => ({ isNotification: !state.isNotification }));\r\n        } else if (contacts.find((contact) => contact.number === number)) {\r\n            this.setState((state) => ({ isNotification: !state.isNotification }));\r\n        } else if (name.trim() === \"\" || number.trim() === \"\") {\r\n            this.setState((state) => ({ isNotification: !state.isNotification }));\r\n        } else {\r\n            this.setState(({ contacts }) => ({\r\n                contacts: [contact, ...contacts],\r\n            }));\r\n        }\r\n    };\r\n\r\n    changeFilter = event => {\r\n        this.setState({ filter: event.currentTarget.value });\r\n    };\r\n\r\n    getVisibleContacts = () => {\r\n        const { filter, contacts } = this.state;\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    };\r\n\r\n    deleteContact = contactId => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n        }));\r\n    };\r\n\r\n    componentDidMount() {\r\n        const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n        if (parsedContacts) {\r\n            this.setState({ contacts: parsedContacts });\r\n        };\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.contacts !== prevState.contacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n        };\r\n    };\r\n\r\n\r\n    render() {\r\n        const { filter, contacts, isNotification } = this.state;\r\n        const visibleContacts = this.getVisibleContacts();\r\n        return (\r\n            <>\r\n                <CSSTransition in={isNotification} classNames={styleNotif} timeout={2000}\r\n                    onEntered={() => this.setState({ isNotification: false })} unmountOnExit>\r\n                    <Notification /></CSSTransition>\r\n                <CSSTransition in={true} classNames={style} appear={true} timeout={1000} unmountOnExit>\r\n                    <h1>Phonebook</h1>\r\n                </CSSTransition>\r\n                <ContactForm onSubmit={this.addContact} contacts={contacts} />\r\n                <h2>Contacts</h2>\r\n                <Filter contacts={contacts} value={filter} onChange={this.changeFilter} />\r\n                <ContactList\r\n                    contacts={visibleContacts}\r\n                    onDeleteContact={this.deleteContact}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}